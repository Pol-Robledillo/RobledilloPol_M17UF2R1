//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Scripts/Player/Inputs.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Inputs: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Inputs()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Inputs"",
    ""maps"": [
        {
            ""name"": ""Character"",
            ""id"": ""fb65075f-668e-41c5-bd7d-faed3b105325"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""920c23ce-1141-4b3f-a844-3da9df69c3f9"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Attack"",
                    ""type"": ""Button"",
                    ""id"": ""440cd09d-99b3-44df-b837-b319eb497557"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChangeToWeapon1"",
                    ""type"": ""Button"",
                    ""id"": ""a665e636-ad62-4f0a-9ae2-f440e7d156c3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChangeToWeapon2"",
                    ""type"": ""Button"",
                    ""id"": ""a9f871c9-90f5-4d3a-8f15-e10dc74aefd4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChangeToWeapon3"",
                    ""type"": ""Button"",
                    ""id"": ""970b06a8-83d5-4ede-8ef6-5d0da7a26532"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChangeToWeapon4"",
                    ""type"": ""Button"",
                    ""id"": ""de382eb6-de3c-48a1-9b2f-aff295b77dd5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PauseGame"",
                    ""type"": ""Button"",
                    ""id"": ""b153536c-c8db-4d13-8f9d-75cb87c1f4b5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""b089b2d3-4b4a-4298-9bc3-87ee32ffc900"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""391daf7f-fffa-41f4-ad50-1295ebc31d85"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""cce0bf98-8c73-4abc-98c1-18878118c97e"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""54a961a8-c774-4354-a661-fe0b6933f220"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""89abeb22-fd04-4799-a723-fed660d36fd7"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""6f69e416-76dc-4d50-8288-6550bc9de9dd"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""f09abadb-3edd-4a29-9902-7e73f801f153"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""e5e306d4-a7c8-4cb5-b393-9526c6a7b4d1"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""08448282-18ee-4dbe-b56e-c3356cc0f06e"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""e9ecdad6-a188-4da9-816a-71a52c6eadc3"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""d0b479e5-e35c-4fb8-9081-15f454be1325"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fb868906-fc1e-4b5a-aaf9-bdfe9009b915"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeToWeapon1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2d7cb47e-99f3-4407-b328-3b4896b50e18"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeToWeapon2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3072cd67-8f41-48d9-90b4-07d72dbe65cd"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeToWeapon3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ff194d48-63d8-45b1-8ca1-7cb80d0445a5"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeToWeapon4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dc39ef15-669f-4757-858e-086a766b3add"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PauseGame"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Character
        m_Character = asset.FindActionMap("Character", throwIfNotFound: true);
        m_Character_Movement = m_Character.FindAction("Movement", throwIfNotFound: true);
        m_Character_Attack = m_Character.FindAction("Attack", throwIfNotFound: true);
        m_Character_ChangeToWeapon1 = m_Character.FindAction("ChangeToWeapon1", throwIfNotFound: true);
        m_Character_ChangeToWeapon2 = m_Character.FindAction("ChangeToWeapon2", throwIfNotFound: true);
        m_Character_ChangeToWeapon3 = m_Character.FindAction("ChangeToWeapon3", throwIfNotFound: true);
        m_Character_ChangeToWeapon4 = m_Character.FindAction("ChangeToWeapon4", throwIfNotFound: true);
        m_Character_PauseGame = m_Character.FindAction("PauseGame", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Character
    private readonly InputActionMap m_Character;
    private List<ICharacterActions> m_CharacterActionsCallbackInterfaces = new List<ICharacterActions>();
    private readonly InputAction m_Character_Movement;
    private readonly InputAction m_Character_Attack;
    private readonly InputAction m_Character_ChangeToWeapon1;
    private readonly InputAction m_Character_ChangeToWeapon2;
    private readonly InputAction m_Character_ChangeToWeapon3;
    private readonly InputAction m_Character_ChangeToWeapon4;
    private readonly InputAction m_Character_PauseGame;
    public struct CharacterActions
    {
        private @Inputs m_Wrapper;
        public CharacterActions(@Inputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Character_Movement;
        public InputAction @Attack => m_Wrapper.m_Character_Attack;
        public InputAction @ChangeToWeapon1 => m_Wrapper.m_Character_ChangeToWeapon1;
        public InputAction @ChangeToWeapon2 => m_Wrapper.m_Character_ChangeToWeapon2;
        public InputAction @ChangeToWeapon3 => m_Wrapper.m_Character_ChangeToWeapon3;
        public InputAction @ChangeToWeapon4 => m_Wrapper.m_Character_ChangeToWeapon4;
        public InputAction @PauseGame => m_Wrapper.m_Character_PauseGame;
        public InputActionMap Get() { return m_Wrapper.m_Character; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CharacterActions set) { return set.Get(); }
        public void AddCallbacks(ICharacterActions instance)
        {
            if (instance == null || m_Wrapper.m_CharacterActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_CharacterActionsCallbackInterfaces.Add(instance);
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @Attack.started += instance.OnAttack;
            @Attack.performed += instance.OnAttack;
            @Attack.canceled += instance.OnAttack;
            @ChangeToWeapon1.started += instance.OnChangeToWeapon1;
            @ChangeToWeapon1.performed += instance.OnChangeToWeapon1;
            @ChangeToWeapon1.canceled += instance.OnChangeToWeapon1;
            @ChangeToWeapon2.started += instance.OnChangeToWeapon2;
            @ChangeToWeapon2.performed += instance.OnChangeToWeapon2;
            @ChangeToWeapon2.canceled += instance.OnChangeToWeapon2;
            @ChangeToWeapon3.started += instance.OnChangeToWeapon3;
            @ChangeToWeapon3.performed += instance.OnChangeToWeapon3;
            @ChangeToWeapon3.canceled += instance.OnChangeToWeapon3;
            @ChangeToWeapon4.started += instance.OnChangeToWeapon4;
            @ChangeToWeapon4.performed += instance.OnChangeToWeapon4;
            @ChangeToWeapon4.canceled += instance.OnChangeToWeapon4;
            @PauseGame.started += instance.OnPauseGame;
            @PauseGame.performed += instance.OnPauseGame;
            @PauseGame.canceled += instance.OnPauseGame;
        }

        private void UnregisterCallbacks(ICharacterActions instance)
        {
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @Attack.started -= instance.OnAttack;
            @Attack.performed -= instance.OnAttack;
            @Attack.canceled -= instance.OnAttack;
            @ChangeToWeapon1.started -= instance.OnChangeToWeapon1;
            @ChangeToWeapon1.performed -= instance.OnChangeToWeapon1;
            @ChangeToWeapon1.canceled -= instance.OnChangeToWeapon1;
            @ChangeToWeapon2.started -= instance.OnChangeToWeapon2;
            @ChangeToWeapon2.performed -= instance.OnChangeToWeapon2;
            @ChangeToWeapon2.canceled -= instance.OnChangeToWeapon2;
            @ChangeToWeapon3.started -= instance.OnChangeToWeapon3;
            @ChangeToWeapon3.performed -= instance.OnChangeToWeapon3;
            @ChangeToWeapon3.canceled -= instance.OnChangeToWeapon3;
            @ChangeToWeapon4.started -= instance.OnChangeToWeapon4;
            @ChangeToWeapon4.performed -= instance.OnChangeToWeapon4;
            @ChangeToWeapon4.canceled -= instance.OnChangeToWeapon4;
            @PauseGame.started -= instance.OnPauseGame;
            @PauseGame.performed -= instance.OnPauseGame;
            @PauseGame.canceled -= instance.OnPauseGame;
        }

        public void RemoveCallbacks(ICharacterActions instance)
        {
            if (m_Wrapper.m_CharacterActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ICharacterActions instance)
        {
            foreach (var item in m_Wrapper.m_CharacterActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_CharacterActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public CharacterActions @Character => new CharacterActions(this);
    public interface ICharacterActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnAttack(InputAction.CallbackContext context);
        void OnChangeToWeapon1(InputAction.CallbackContext context);
        void OnChangeToWeapon2(InputAction.CallbackContext context);
        void OnChangeToWeapon3(InputAction.CallbackContext context);
        void OnChangeToWeapon4(InputAction.CallbackContext context);
        void OnPauseGame(InputAction.CallbackContext context);
    }
}
